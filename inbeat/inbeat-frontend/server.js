// Generated by CoffeeScript 1.9.1
(function() {
  var app, breadcrumbs, config, express, fs, marked, parseMeta, pathmodule, url;

  express = require("express");

  fs = require("fs");

  marked = require("marked");

  url = require("url");

  pathmodule = require("path");

  config = require("./config");

  app = express();

  breadcrumbs = function(path) {
    var i, j, len, output, p, part, parts;
    parts = path.split("/");
    p = "/";
    output = [];
    for (i = j = 0, len = parts.length; j < len; i = ++j) {
      part = parts[i];
      if (!(part !== "")) {
        continue;
      }
      p += part;
      if (i < parts.length - 1) {
        p += "/";
      }
      output.push({
        link: p,
        title: part
      });
    }
    return output;
  };

  parseMeta = function(data) {
    var attr, i, regex, result;
    regex = /\$([a-zA-Z0-9]+)\s*:\s*([^\n]*)/g;
    attr = {};
    while ((result = regex.exec(data)) !== null) {
      attr[result[1]] = result[2];
      i = result[0].length + result.index;
    }
    return {
      text: data.substring(i + 1),
      meta: attr
    };
  };

  app.use(express["static"](__dirname + '/public'));

  app.set('views', __dirname + '/public/views');

  app.set('view engine', 'jade');

  app.get("/*", function(req, res) {
    var path;
    path = pathmodule.normalize(__dirname + '/public' + (url.parse(req.url)).pathname);
    if ((path.charAt(path.length - 1)) === '/') {
      path += "index";
    }
    path += ".md";
    fs.readFile(path, 'utf8', function(err, data) {
      var meta;
      if (!err) {
        meta = parseMeta(data);
        if (meta.meta.redirect) {
          res.redirect(meta.meta.redirect);
          return;
        }
        res.render("layout", {
          title: meta.meta.title ? meta.meta.title : "Title",
          content: !meta.meta.markdown ? marked(meta.text) : meta.text,
          breadcrumbs: breadcrumbs((url.parse(req.url)).pathname)
        });
      } else {
        config.Logger.warn(err);
        res.sendStatus(400);
      }
    });
  });

  app.listen(config["inbeat-frontend"]["port"]);

  console.log("InBeat: Frontend listening on: " + config["inbeat-frontend"]["port"]);

  process.on("SIGINT", function() {
    console.log("\nshutting down from  SIGINT (Crtl-C)");
    process.exit();
  });

}).call(this);
